{"version":3,"sources":["../../src/provider/index.tsx","../../src/hooks/usePermissions.ts","../../src/hooks/useAuthorize.ts","../../src/components/CheckPermission.tsx","../../src/router/PossoRoute.tsx","screens/Home.tsx","screens/About.tsx","screens/Contact.tsx","screens/Login.tsx","App.tsx","index.tsx"],"names":["PossoContext","permissions","PossoProvider","children","rest","value","usePermissions","useContext","useAuthorize","providerStrategy","authorizationStrategy","state","requirements","Can","alternateView","React","CheckPermission","NotAllowedPage","PossoRoute","path","exact","render","Component","component","notAllowedComponent","isAuthorized","isAuthenticated","redirect","notAuthenticatedRedirect","props","Home","style","display","width","justifyContent","About","Contact","Login","useState","email","setEmail","password","setPassword","className","onSubmit","e","preventDefault","sessionStorage","setItem","window","location","replace","htmlFor","id","name","type","required","onChange","target","placeholder","App","getItem","NotAllowedComponent","to","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1b13e40d.chunk.js","sourcesContent":["// NOT AUTHENTICATED STRATEGY\n\n// RECEIVE IF IT'S AUTHENTICATED\n\n//\n\nimport React from 'react';\nimport { PossoProviderProps } from '../types';\n\nexport const PossoContext = React.createContext<PossoProviderProps>({\n  permissions: [''],\n});\n\nexport const PossoProvider: React.FC<PossoProviderProps> = ({\n  children,\n  ...rest\n}) => {\n  return <PossoContext.Provider value={rest}>{children}</PossoContext.Provider>;\n};\n\nexport default PossoProvider;\n","import { useContext } from 'react';\nimport { PossoContext } from '../provider';\n\nexport const usePermissions = () => useContext(PossoContext);\n","import { AuthorizationStrategy } from '../types';\nimport { usePermissions } from './usePermissions';\n\nexport const useAuthorize = (\n  requirements: Array<string>,\n  authorizationStrategy?: AuthorizationStrategy<any, any>,\n): boolean => {\n  const {\n    permissions,\n    authorizationStrategy: providerStrategy,\n  } = usePermissions();\n\n  const defaultStrategy = () => {\n    return !!permissions.find(state => requirements.includes(state));\n  };\n\n  if (authorizationStrategy) {\n    return authorizationStrategy(permissions, requirements);\n  }\n\n  if (providerStrategy) {\n    return providerStrategy(permissions, requirements);\n  }\n\n  return defaultStrategy();\n};\n","/**\n *\n * CheckPermission\n *\n */\nimport React from 'react';\nimport { useAuthorize } from '../hooks/useAuthorize';\nimport { Permissions } from '../types';\n\ntype Props = Permissions & {\n  alternateView?: JSX.Element | null;\n};\n\nconst Can: React.FC<Props> = ({\n  children,\n  permissions,\n  authorizationStrategy,\n  alternateView,\n}) => (\n  <React.Fragment>\n    {useAuthorize(permissions, authorizationStrategy) ? (\n      <React.Fragment>{children}</React.Fragment>\n    ) : (\n      alternateView\n    )}\n  </React.Fragment>\n);\n\nexport const CheckPermission: React.FC<Props> = ({\n  children,\n  permissions,\n  authorizationStrategy,\n  alternateView = null,\n}) => (\n  <Can\n    permissions={permissions}\n    authorizationStrategy={authorizationStrategy}\n    alternateView={alternateView}\n  >\n    {children}\n  </Can>\n);\n","/**\n *\n * App\n *\n * This component is the skeleton around the actual pages, and should only\n * contain code that should be seen on all pages. (e.g. navigation bar)\n */\n\nimport React from 'react';\nimport { Route, RouteComponentProps, RouteProps } from 'react-router-dom';\nimport { useAuthorize } from '../hooks/useAuthorize';\nimport { usePermissions } from '../hooks/usePermissions';\nimport { Permissions, PossoRouteProps } from '../types';\n\nconst NotAllowedPage = () => {\n  return (\n    <div>\n      <h2>You're not allowed to see this page.</h2>\n    </div>\n  );\n};\n\ntype Props = RouteProps & Permissions & PossoRouteProps;\n\nexport const PossoRoute: React.FC<Props> = ({\n  path,\n  exact,\n  render,\n  component: Component,\n  permissions,\n  authorizationStrategy,\n  notAllowedComponent,\n}) => {\n  const isAuthorized = useAuthorize(permissions, authorizationStrategy);\n  const {\n    isAuthenticated,\n    notAuthenticatedRedirect: redirect,\n  } = usePermissions();\n\n  const renderComponent = (props: RouteComponentProps<any, any, unknown>) => {\n    if (isAuthenticated) {\n      if (!isAuthorized) {\n        if (notAllowedComponent) {\n          return notAllowedComponent;\n        }\n\n        return <NotAllowedPage />;\n      }\n\n      if (Component) {\n        return <Component {...props} />;\n      }\n      return render;\n    }\n\n    return redirect;\n  };\n\n  return <Route exact={exact} path={path} render={renderComponent} />;\n};\n","import React from 'react';\nimport { CheckPermission } from 'posso';\n\nconst Home: React.FC = () => {\n  return (\n    <div style={{display: 'flex', width: '100%', justifyContent: 'center'}}>\n      <h2>Home page</h2>\n      <CheckPermission permissions={['page/home']} alternateView={<h2>Nicolau!</h2>}>\n        <span>Authorized component</span>\n      </CheckPermission>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\n\nconst About: React.FC = () => {\n  return (\n    <div style={{display: 'flex', width: '100%', justifyContent: 'center'}}>\n      <h2>About page</h2>\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\n\nconst Contact: React.FC = () => {\n  return (\n    <div style={{display: 'flex', width: '100%', justifyContent: 'center'}}>\n      <h2>Contact page</h2>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React, { FormEvent } from 'react';\n\nconst Login: React.FC = () => {\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    sessionStorage.setItem('exampleToken', 'token');\n    window.location.replace('/home');\n  }\n\n  return (\n    <div>\n      <form className='react-form' onSubmit={handleSubmit}>\n        <h1>Hi folks!</h1>\n\n        <fieldset className='form-group'>\n          <label htmlFor=\"formEmail\">Email:</label>\n\n          <input id='formEmail' className='form-input' name='email' type='email' required onChange={e => setEmail(e.target.value)} value={email} />\n        </fieldset>\n        <fieldset className='form-group'>\n          <label htmlFor=\"formPassword\">Password:</label>\n\n          <input id='formPassword' className='form-input' name='password' type='password' required onChange={e => setPassword(e.target.value)} value={password} />\n        </fieldset>\n\n        <div className='form-group'>\n          <input id='formButton' className='btn' type='submit' placeholder='Send message' />\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React from 'react'\n\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { PossoProvider, PossoRoute } from 'posso';\nimport Home from './screens/Home';\nimport About from './screens/About';\nimport Contact from './screens/Contact';\nimport Login from './screens/Login';\n\nconst App = () => {\n  const permissionsOfApp = ['page/home'];\n  const isAuthenticated = sessionStorage.getItem('exampleToken');\n\n  const NotAllowedComponent = () => {\n    return (\n      <div>\n        <h2>Not allowed page.</h2>\n      </div>\n    )\n  }\n\n  return (\n    <PossoProvider permissions={permissionsOfApp} isAuthenticated={isAuthenticated !== null} notAuthenticatedRedirect={<Redirect to=\"/\" />}>\n      <BrowserRouter>\n        <Switch>\n          <Route exact path={'/'} component={Login} />\n          <PossoRoute exact path={'/home'} component={Home} permissions={['page/home']} />\n          <PossoRoute exact path={'/about'} component={About} permissions={['page/about']} notAllowedComponent={<NotAllowedComponent />} />\n          <PossoRoute exact path={'/contact'} component={Contact} permissions={['page/contact']} />\n        </Switch>\n      </BrowserRouter>\n    </PossoProvider>\n  )\n}\n\nexport default App;\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}